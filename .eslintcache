[{"/Users/Diana/Courses/CLOUDS_project/clouds/src/components/Header.jsx":"1","/Users/Diana/Courses/CLOUDS_project/clouds/src/pages/Homepage.js":"2","/Users/Diana/Courses/CLOUDS_project/clouds/src/components/SegmentButton.jsx":"3","/Users/Diana/Courses/CLOUDS_project/clouds/src/App.js":"4","/Users/Diana/Courses/CLOUDS_project/clouds/src/pages/NewsForm.js":"5","/Users/Diana/Courses/CLOUDS_project/clouds/src/index.js":"6","/Users/Diana/Courses/CLOUDS_project/clouds/src/components/Footer.jsx":"7","/Users/Diana/Courses/CLOUDS_project/clouds/src/pages/CountryPage.js":"8","/Users/Diana/Courses/CLOUDS_project/clouds/src/firebase/utils.js":"9","/Users/Diana/Courses/CLOUDS_project/clouds/src/components/News.jsx":"10","/Users/Diana/Courses/CLOUDS_project/clouds/src/components/LineChart.jsx":"11","/Users/Diana/Courses/CLOUDS_project/clouds/src/components/TableRowCountries.jsx":"12","/Users/Diana/Courses/CLOUDS_project/clouds/src/components/Title.jsx":"13","/Users/Diana/Courses/CLOUDS_project/clouds/src/components/TableAllCountries.jsx":"14"},{"size":760,"mtime":1608298884993,"results":"15","hashOfConfig":"16"},{"size":1910,"mtime":1608374635432,"results":"17","hashOfConfig":"16"},{"size":667,"mtime":1608297338784,"results":"18","hashOfConfig":"16"},{"size":5348,"mtime":1608374618213,"results":"19","hashOfConfig":"16"},{"size":4967,"mtime":1608292523680,"results":"20","hashOfConfig":"16"},{"size":311,"mtime":1607788367461,"results":"21","hashOfConfig":"16"},{"size":464,"mtime":1608378554670,"results":"22","hashOfConfig":"16"},{"size":4143,"mtime":1608378645834,"results":"23","hashOfConfig":"16"},{"size":3673,"mtime":1608303790631,"results":"24","hashOfConfig":"16"},{"size":1574,"mtime":1608298242439,"results":"25","hashOfConfig":"16"},{"size":3257,"mtime":1608114717525,"results":"26","hashOfConfig":"16"},{"size":1428,"mtime":1608043161638,"results":"27","hashOfConfig":"16"},{"size":508,"mtime":1608302523942,"results":"28","hashOfConfig":"16"},{"size":7390,"mtime":1608377109461,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1rpaa9f",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Diana/Courses/CLOUDS_project/clouds/src/components/Header.jsx",["68","69"],"/Users/Diana/Courses/CLOUDS_project/clouds/src/pages/Homepage.js",[],"/Users/Diana/Courses/CLOUDS_project/clouds/src/components/SegmentButton.jsx",["70","71","72","73","74","75"],"import React from 'react'\nimport {Segment, Container, Form,Input, TextArea, Grid, Icon,Header} from 'semantic-ui-react'\nimport {Link,Redirect} from 'react-router-dom'\n\nconst SegmentButton =({page,country, history})=> {\n        return(\n            \n            <Container>\n             \n              \n                    <Header as='h3' textAlign=\"right\" >\n                        Add worlwide news or country specific news\n                        <Link to='addNews'><Icon link name='plus' style={{marginLeft: '0.2rem'}}/></Link>\n                     </Header>\n               \n           \n            </Container>\n           \n        )\n}\n\nexport default SegmentButton",["76","77"],"/Users/Diana/Courses/CLOUDS_project/clouds/src/App.js",["78","79","80","81","82","83","84","85"],"import './App.css';\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport CountryPage from './pages/CountryPage'\nimport HeaderApp from './components/Header'\nimport HomePage from './pages/Homepage'\nimport {auth, createUserProfileDocument, storage} from './firebase/utils'\nimport Footer from './components/Footer';\nimport FormNews from './pages/NewsForm';\nimport Title from './components/Title'\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n\n  constructor(){\n    super();\n    this.state = {\n      currentUser: null,\n      global: {},\n      countries: {},\n      countryNames: {},\n      aprilData: {},\n      world: {\n        0: {},\n        1: {},\n        2: {},\n        3: {},\n        4: {},\n        5: {},\n        6: {}\n      },\n      todayDate: \" \",\n      weekAgoDate: \" \",\n      image:''\n      }\n  }\n\n\n\n\n  getDates =() => {\n    const today = new Date();\n    let t = today.getDate()\n    \n    const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)\n    let d = weekAgo.getDate()\n    if( d >=1 && d <= 9){\n      d = '0'+ d\n    }\n    if( t >=1 && t <= 9){\n      t = '0'+ t\n    }\n    const date2 = weekAgo.getFullYear()+'-'+(weekAgo.getMonth()+1)+'-'+d\n    const date1 = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+t\n    this.setState({todayDate: date1, weekAgoDate: date2})\n  }\n\n  getSummary = async () => {\n\n    // fetch(\"https://api.covid19api.com/summary\")\n    // .then(response => response.json())\n    // .then(result => this.setState({global: result}))\n    // .catch(error => console.log('error',error))\n    try{\n      const response = await fetch(\"https://api.covid19api.com/summary\");\n      while(response.status != 200){\n        response = await fetch(\"https://api.covid19api.com/summary\");\n      }\n      const jsonData = await response.json();\n      let names = jsonData.Countries.map( function(c) {\n        \n            let name = { key: c.CountryCode.toLowerCase(),\n                         value: c.CountryCode.toLowerCase(),\n                         flag : c.CountryCode.toLowerCase(),\n                         text : c.Country\n                        }\n            return name;\n        \n       });\n      \n      this.setState({global: jsonData.Global, countries: jsonData.Countries, countryNames: names},()=>{\n        console.log(this.state.countries)\n      });\n    } catch(error){\n      console.log(error)\n    }\n        \n\n  }\n\n  getWorld = async () => {\n    try{\n      await this.getDates();\n      const url = `https://api.covid19api.com/world?from=${this.state.weekAgoDate}&to=${this.state.todayDate}`\n      const response = await fetch(url);\n      while(response.status != 200){\n        response = await fetch(url);\n      }\n      const jsonData = await response.json();\n      const final = jsonData.sort((a,b) => a.TotalConfirmed - b.TotalConfirmed)\n      this.setState({world: final},()=>console.log(this.state.world));\n    } catch(error){\n      console.log(error)\n    }\n  }\n\n  getAprilData = async () => {\n    try{\n      const url = `https://api.covid19api.com/world?from=2020-04-13&to=${this.state.todayDate}`\n      const response = await fetch(url);\n      while(response.status != 200){\n        response = await fetch(url);\n      }\n      const jsonData = await response.json();\n      const final = jsonData.filter((e,i) => i %5 == 0).sort((a,b) => a.TotalConfirmed - b.TotalConfirmed)\n      this.setState({aprilData: final}, () => console.log(this.state.aprilData));\n    } catch(error){\n      console.log(error)\n    }\n  }\n\n  getImage = async () => {\n    const image = await storage.refFromURL(\"gs://clouds-29b71.appspot.com/covid.png\").getDownloadURL()\n    this.setState({image})\n  }\n\n  \n\n  \n\n  componentDidMount(){\n    this.getWorld();\n    this.getSummary();\n    this.getAprilData();\n    this.getImage();\n    \n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot(snapShot => {\n          this.setState({\n            currentUser:{\n              id: snapShot.id,\n            ...snapShot.data()\n            }\n            \n          });\n        });\n      } else {\n        this.setState({currentUser:userAuth});\n      }\n\n      \n    });\n    \n  }\n\n  componentWillUnmount(){\n    this.unsubscribeFromAuth();\n  }\n\n\n  render() {\n    return (\n      <div>\n          <HeaderApp currentUser={this.state.currentUser}/>\n          <Title image={this.state.image}/>\n          <Switch>\n            <Route exact path='/' component={()=><HomePage \n              global = {this.state.global}\n              world ={this.state.world}\n              today={this.state.todayDate}\n              aprilData = {this.state.aprilData}\n              countries={this.state.countries}/>} />\n            <Route path='/summary/:countryID' component={({match}) => \n                <CountryPage \n                  countries ={this.state.countries}\n                  match={match}\n                  today = {this.state.todayDate}\n                  />\n            } />\n            <Route exact path='/addNews' component={() => <FormNews\n              currentUser={this.state.currentUser}\n              countryNames={this.state.countryNames}\n            />} />\n           \n          </Switch>\n          <Footer />\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n",["86","87"],"/Users/Diana/Courses/CLOUDS_project/clouds/src/pages/NewsForm.js",["88"],"import React from 'react'\nimport {Segment, Container, Form,Input, TextArea, Button, Header, Icon,Dropdown,Radio} from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\nimport {firestore, addNews} from '../firebase/utils'\n\nclass FormNews extends React.Component {\n\n    constructor(){\n        super()\n        this.state ={\n            title: '',\n            description: '',\n            value: '',\n            country:'',\n            user: {}\n        }\n    }\n\n    componentDidMount() {\n        this.setState({user: this.props.currentUser})\n    }\n\n    onSubmit = async event =>{\n        event.preventDefault()\n        console.log(this.state)\n        addNews(this.state)\n        this.setState({title:'',description:'', value:'', country:''})\n    }\n\n    render() {\n        const {currentUser, countryNames} = this.props\n        if(currentUser){\n            return(\n                <Container>\n                    <Container fluid>\n                    <Link to='/'>\n                        <Button\n                            basic \n                            color='blue' \n                            floated='left'\n                            style={{marginBottom:'1rem'}}\n                            >Back\n                        </Button>\n                    </Link>\n                    </Container>\n                    <br />\n                    <br />\n                    \n                    <Header as='h3'>Fill in the folowing form</Header>\n                  \n                    \n                    <Form onSubmit={this.onSubmit} >\n                        <Form.Field >\n                            <label>News Title</label>\n                            <Input \n                                placeholder=\"Title\" \n                                required\n                                value={this.state.title}\n                                onChange={event => this.setState({title: event.target.value})}\n                            />\n                        </Form.Field>\n                        <Form.Field >\n                            <label>News Description</label>\n                            <TextArea \n                                placeholder=\"Description\" \n                                required\n                                value={this.state.description}\n                                onChange={event => this.setState({description: event.target.value})}\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <Radio\n                                label='Worldwide'\n                                name='radioGroup'\n                                value='worldwide'\n                                checked={this.state.value === 'worldwide'}\n                                onChange={(e,{value}) => this.setState({value})}\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <Radio\n                                label='Country'\n                                name='radioGroup'\n                                value='country'\n                                checked={this.state.value === 'country'}\n                                onChange={(e,{value}) => this.setState({value})}\n                            />\n                        </Form.Field>\n                        {\n                            this.state.value === 'country' ?\n                            <Form.Field>\n                            <Dropdown\n                                placeholder='Select Country'\n                                fluid\n                                search\n                                selection\n                                options={countryNames}\n                                onChange={event=>this.setState({country: event.target.textContent})}\n                            />\n                            </Form.Field> :\n                            null\n                        }\n                        \n                        \n                        <Button style={{marginBottom:'3rem'}} primary >Add</Button>\n                    </Form>\n                    \n                </Container>\n            )\n        } else {\n            return (\n                <Container>\n                    <Link to='/'>\n                        <Button\n                            basic \n                            color='blue' \n                            floated='left'\n                            style={{marginBottom:'1rem'}}\n                            >Back\n                        </Button>\n                    </Link>\n                    <Segment placeholder>\n                        <Header icon>\n                            <Icon name='user' />\n                                    You must sign in first\n                            </Header>\n                    </Segment>\n                </Container>\n            )\n        }\n        \n\n    }\n}\n\nexport default FormNews",["89","90"],"/Users/Diana/Courses/CLOUDS_project/clouds/src/index.js",[],["91","92"],"/Users/Diana/Courses/CLOUDS_project/clouds/src/components/Footer.jsx",[],"/Users/Diana/Courses/CLOUDS_project/clouds/src/pages/CountryPage.js",["93","94","95","96","97","98","99","100"],"/Users/Diana/Courses/CLOUDS_project/clouds/src/firebase/utils.js",["101"],"/Users/Diana/Courses/CLOUDS_project/clouds/src/components/News.jsx",["102","103","104","105"],"/Users/Diana/Courses/CLOUDS_project/clouds/src/components/LineChart.jsx",["106"],"import {Line} from 'react-chartjs-2';\nimport React from 'react';\nimport {Container} from 'semantic-ui-react';\n\n\n\nclass LineChart extends React.Component{\n\n    constructor(){\n        super()\n    }\n\n    formatDate =(x) => {\n        return x.getDate() + \" \" + x.toLocaleString('default', {month: 'short'});\n    }\n\n    getDatesArray =(start,end) => {\n        let dates = [];\n        const startDate = new Date(start)\n        const endDate = new Date(end)\n        while (startDate < endDate) {\n            dates = [...dates, new Date(startDate)]\n            startDate.setDate(startDate.getDate() + 5)\n        }\n        dates = [...dates, endDate]\n        const newdates = dates.map(elem => this.formatDate(elem))\n        return newdates\n    }\n\n    render() {\n        const {today, data,one,Country} = this.props\n        if(data[0] != null){\n            const first = one ? new Date(data[0].Date) : \"2020-04-13\"\n            const dates = this.getDatesArray(first, today)\n            const totalDeaths =[]\n            const totalRecovered = []\n            const totalCases =[]\n            if(one){\n                data.forEach(e =>  {\n                    totalDeaths.push(e.Deaths)\n                    totalRecovered.push(e.Recovered)\n                    totalCases.push(e.Confirmed)\n                })\n            } else {\n                data.forEach(e =>  {\n                    totalDeaths.push(e.TotalDeaths)\n                    totalRecovered.push(e.TotalRecovered)\n                    totalCases.push(e.TotalConfirmed)\n                })\n            }\n            let str = one ? `${Country}` :'Worldwide'  \n\n            return(\n                <Container style={{marginTop:'50px'}}>\n                    \n                    <Line \n                        data={{\n                            labels: dates,\n                            datasets: [\n                               {\n                                    data: totalDeaths,\n                                    backgroundColor: '#ff9999',\n                                    label: 'Total Deaths'\n                                },\n                                {\n                                    data: totalRecovered,\n                                    backgroundColor: '#99ccff',\n                                    label: 'Total Recovered'\n                                },\n                                {\n                                    data:totalCases,\n                                    backgroundColor: '#ffe6b3',\n                                    label: 'Total Cases'\n                                }\n                            ]\n                        }}\n                        options={{\n                            title: {\n                                display: true,\n                                text: `Total Corona Virus Cases ${str}`,\n                                fontSize: 20\n                            }\n        \n                        }}\n                    />\n                </Container>\n                \n            )\n        } else {\n            return(\n                <div>\n                    Error while fetching data\n                </div>\n            )\n        }\n\n        \n        \n        \n        \n    }\n\n    \n}\n\nexport default LineChart;","/Users/Diana/Courses/CLOUDS_project/clouds/src/components/TableRowCountries.jsx",["107","108"],"import React from 'react';\nimport {Table, Container} from 'semantic-ui-react';\nimport {Link} from 'react-router-dom';\nimport { withRouter } from \"react-router\";\n\nclass TableRowCountries extends React.Component{\n\n    printNumber= (num) =>{\n        var num_parts = num.toString().split(\".\");\n        num_parts[0] = num_parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        return num_parts.join(\".\");\n      }\n  \n\n    render(){\n\n        const {Row,Cell} = Table;\n        const {Country, NewCases, TotalCases, NewRecoveries, TotalRecoveries, NewDeaths, TotalDeaths, Slug} = this.props\n        return(\n            <Row> \n                <Cell style={{backgroundColor: 'grey', color:'black'}} ><Link to={`/summary/${Slug}`} style={{color:\"white\"}}>{Country}</Link></Cell>\n                <Cell style={{backgroundColor: '#ffe6b3'}} >{this.printNumber(NewCases)}</Cell>\n                <Cell style={{backgroundColor: '#ffe6b3'}}>{this.printNumber(TotalCases)}</Cell>\n                <Cell style={{backgroundColor: '#99ccff'}}>{this.printNumber(NewRecoveries)}</Cell>\n                <Cell style={{backgroundColor: '#99ccff'}}>{this.printNumber(TotalRecoveries)}</Cell>\n                <Cell style={{backgroundColor: '#ff9999'}}>{this.printNumber(NewDeaths)}</Cell>\n                <Cell style={{backgroundColor: '#ff9999'}}>{this.printNumber(TotalDeaths)}</Cell>\n            </Row>\n        )\n    }\n}\n\nexport default TableRowCountries;","/Users/Diana/Courses/CLOUDS_project/clouds/src/components/Title.jsx",["109"],"import {Header,Container,Image,Grid} from 'semantic-ui-react'\n\nconst Title = ({image}) =>{\n    return(\n        <Container textAlign=\"center\">\n            <Header as='h1'>\n                <Header.Content>\n                  \n                    <div><Image src={image} size='mini' spaced/>COVID-19</div>\n                <Header.Subheader>Live Updates and Statistics</Header.Subheader>\n                </Header.Content>\n            </Header>\n            <br />\n        </Container>\n    )\n}\n\nexport default Title","/Users/Diana/Courses/CLOUDS_project/clouds/src/components/TableAllCountries.jsx",[],{"ruleId":"110","severity":1,"message":"111","line":2,"column":33,"nodeType":"112","messageId":"113","endLine":2,"endColumn":37},{"ruleId":"110","severity":1,"message":"114","line":3,"column":9,"nodeType":"112","messageId":"113","endLine":3,"endColumn":13},{"ruleId":"110","severity":1,"message":"115","line":2,"column":9,"nodeType":"112","messageId":"113","endLine":2,"endColumn":16},{"ruleId":"110","severity":1,"message":"116","line":2,"column":29,"nodeType":"112","messageId":"113","endLine":2,"endColumn":33},{"ruleId":"110","severity":1,"message":"117","line":2,"column":34,"nodeType":"112","messageId":"113","endLine":2,"endColumn":39},{"ruleId":"110","severity":1,"message":"118","line":2,"column":41,"nodeType":"112","messageId":"113","endLine":2,"endColumn":49},{"ruleId":"110","severity":1,"message":"119","line":2,"column":51,"nodeType":"112","messageId":"113","endLine":2,"endColumn":55},{"ruleId":"110","severity":1,"message":"120","line":3,"column":14,"nodeType":"112","messageId":"113","endLine":3,"endColumn":22},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"110","severity":1,"message":"120","line":3,"column":25,"nodeType":"112","messageId":"113","endLine":3,"endColumn":33},{"ruleId":"125","severity":1,"message":"126","line":67,"column":29,"nodeType":"127","messageId":"128","endLine":67,"endColumn":31},{"ruleId":"129","severity":1,"message":"130","line":68,"column":9,"nodeType":"112","messageId":"131","endLine":68,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":97,"column":29,"nodeType":"127","messageId":"128","endLine":97,"endColumn":31},{"ruleId":"129","severity":1,"message":"130","line":98,"column":9,"nodeType":"112","messageId":"131","endLine":98,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":112,"column":29,"nodeType":"127","messageId":"128","endLine":112,"endColumn":31},{"ruleId":"129","severity":1,"message":"130","line":113,"column":9,"nodeType":"112","messageId":"131","endLine":113,"endColumn":17},{"ruleId":"125","severity":1,"message":"132","line":116,"column":51,"nodeType":"127","messageId":"128","endLine":116,"endColumn":53},{"ruleId":"121","replacedBy":"133"},{"ruleId":"123","replacedBy":"134"},{"ruleId":"110","severity":1,"message":"135","line":4,"column":9,"nodeType":"112","messageId":"113","endLine":4,"endColumn":18},{"ruleId":"121","replacedBy":"136"},{"ruleId":"123","replacedBy":"137"},{"ruleId":"121","replacedBy":"138"},{"ruleId":"123","replacedBy":"139"},{"ruleId":"110","severity":1,"message":"114","line":8,"column":9,"nodeType":"112","messageId":"113","endLine":8,"endColumn":13},{"ruleId":"110","severity":1,"message":"140","line":10,"column":27,"nodeType":"112","messageId":"113","endLine":10,"endColumn":33},{"ruleId":"125","severity":1,"message":"126","line":44,"column":33,"nodeType":"127","messageId":"128","endLine":44,"endColumn":35},{"ruleId":"129","severity":1,"message":"130","line":45,"column":13,"nodeType":"112","messageId":"131","endLine":45,"endColumn":21},{"ruleId":"125","severity":1,"message":"132","line":48,"column":54,"nodeType":"127","messageId":"128","endLine":48,"endColumn":56},{"ruleId":"125","severity":1,"message":"132","line":59,"column":19,"nodeType":"127","messageId":"128","endLine":59,"endColumn":21},{"ruleId":"125","severity":1,"message":"132","line":61,"column":27,"nodeType":"127","messageId":"128","endLine":61,"endColumn":29},{"ruleId":"125","severity":1,"message":"132","line":83,"column":54,"nodeType":"127","messageId":"128","endLine":83,"endColumn":56},{"ruleId":"125","severity":1,"message":"132","line":55,"column":18,"nodeType":"127","messageId":"128","endLine":55,"endColumn":20},{"ruleId":"110","severity":1,"message":"115","line":2,"column":9,"nodeType":"112","messageId":"113","endLine":2,"endColumn":16},{"ruleId":"110","severity":1,"message":"140","line":2,"column":42,"nodeType":"112","messageId":"113","endLine":2,"endColumn":48},{"ruleId":"110","severity":1,"message":"114","line":3,"column":9,"nodeType":"112","messageId":"113","endLine":3,"endColumn":13},{"ruleId":"141","severity":1,"message":"142","line":6,"column":5,"nodeType":"143","messageId":"144","endLine":9,"endColumn":6},{"ruleId":"141","severity":1,"message":"142","line":9,"column":5,"nodeType":"143","messageId":"144","endLine":11,"endColumn":6},{"ruleId":"110","severity":1,"message":"145","line":2,"column":16,"nodeType":"112","messageId":"113","endLine":2,"endColumn":25},{"ruleId":"110","severity":1,"message":"146","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":20},{"ruleId":"110","severity":1,"message":"119","line":1,"column":32,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Segment' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'TextArea' is defined but never used.","'Grid' is defined but never used.","'Redirect' is defined but never used.","no-native-reassign",["147"],"no-negated-in-lhs",["148"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-const-assign","'response' is constant.","const","Expected '===' and instead saw '=='.",["147"],["148"],"'firestore' is defined but never used.",["147"],["148"],["147"],["148"],"'Button' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Container' is defined but never used.","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation"]